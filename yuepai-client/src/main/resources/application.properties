spring.application.name = yuepai-client
dubbo.application.name = yuepai-client
dubbo.registry.address = zookeeper://127.0.0.1:2181
#数据源配置文件
#本地数据库
spring.datasource.url = jdbc:mysql://127.0.0.1:3306/yuepai?useUnicode=true&characterEncoding=utf8&serverTimezone=UTC
#&serverTimezone=Asia/Shanghai
spring.datasource.username = root
spring.datasource.password =  root
spring.datasource.driverClassName = com.mysql.jdbc.Driver
#页面热加载
spring.thymeleaf.cache = true
#不返回为null的字段
spring.jackson.default-property-inclusion=non_null

logging.level.org.springframework=WARN
logging.level.org.spring.springboot.dao=DEBUG
logging.file=logs/spring-boot-logging.log
#在控制台输出sql，level后面的是我mapper的包名
logging.level.com.yuepai.yuepaiserver.mapper=debug

#端口号
server.port = 8110
#富文本图片上传
#web.upload-path=D:/test/image/
web.upload-path=C:/tomcat9/webapps/image
spring.mvc.static-path-pattern=/**
spring.resources.static-locations=classpath:/META-INF/resources/,classpath:/resources/,\
  classpath:/static/,classpath:/public/,file:${web.upload-path},file:static/,C:/tomcat9/webapps/image/

apollo.bootstrap.enabled = true
apollo.bootstrap.namespaces = application
apollo.meta=http://127.0.0.1:8080

#=============== consumer  =======================
spring.kafka.consumer.bootstrap-servers=127.0.0.1:8110
spring.kafka.consumer.group-id=0
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-commit-interval=100

#=======set comsumer max fetch.byte 2*1024*1024=============
spring.kafka.consumer.properties.max.partition.fetch.bytes=2097152


#kafka地址 brokers集群地址用,隔开
spring.kafka.bootstrap-servers=127.0.0.1:9092

#生产者的配置，大部分我们可以使用默认的，这里列出几个比较重要的属性
#每批次发送消息的数量
spring.kafka.producer.batch-size=16
#发送失败重试次数
spring.kafka.producer.retries=0
#即32MB的批处理缓冲区
spring.kafka.producer.buffer-memory=33554432
#key序列化方式
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer


#全局配置
regist.address = 127.0.0.1:2181
